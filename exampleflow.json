[
    {
        "id": "1ceb83823bf626ce",
        "type": "tab",
        "label": "Devices to virtual battery",
        "disabled": false,
        "info": "",
        "env": []
    },
    {
        "id": "222a409ae4cf9855",
        "type": "group",
        "z": "1ceb83823bf626ce",
        "name": "Place where you can gather the necessary information you need for the virtual battery",
        "style": {
            "label": true
        },
        "nodes": [
            "1a2dd6c925eb721b",
            "b3c0a538005709de",
            "ad9f294e07431854",
            "3f6acb6de37723eb",
            "7dce6425b3d8dad5",
            "6f75e576640949e1"
        ],
        "x": 194,
        "y": 579,
        "w": 572,
        "h": 202
    },
    {
        "id": "63e881f2502c39c4",
        "type": "group",
        "z": "1ceb83823bf626ce",
        "name": "Place where you can modify the incoming stream of data before it goes to the virtual battery",
        "style": {
            "label": true
        },
        "nodes": [
            "feec784551f7da5e",
            "2c767dedb9794c94",
            "c2af3567952dc598",
            "2dc1d934571b9bd2",
            "5d17457c95b5970b",
            "09716c3d6333d5d6",
            "6caf8c314a8f60c7",
            "1017018f225b181e",
            "1870d52ae22bc658",
            "e9e06447ab8915e1",
            "4d7a0663cecacc8b",
            "1209edc424942856",
            "f3d8b797bac8734f",
            "75b5e73ac8be721a",
            "f5885171fe40d66d",
            "8b5feac3f604635d",
            "4cd8855c1ce4b800",
            "2db9d3181e3e30fe",
            "809358fdb56a221a",
            "b983c8e520366000",
            "cf1cfbbf8bcc2ff6",
            "674da6b6fc86a5c9",
            "c6359613b6dc6e3d",
            "3bd638416fccd21c",
            "6992644613867616",
            "177dc55d28340f8f",
            "90c6bc2d250d5265",
            "664e91dbc5411359",
            "33e227fa66e40998",
            "6199e5585be19a82",
            "2a32f3945d9f03f8",
            "49cbbc71d59b86db",
            "aa86d8e17401402d"
        ],
        "x": 174,
        "y": 799,
        "w": 2092,
        "h": 742
    },
    {
        "id": "1a2dd6c925eb721b",
        "type": "victron-input-battery",
        "z": "1ceb83823bf626ce",
        "g": "222a409ae4cf9855",
        "service": "com.victronenergy.battery.ttyS5",
        "path": "/Dc/0/Current",
        "serviceObj": {
            "service": "com.victronenergy.battery.ttyS5",
            "name": "SmartShunt 500A/50mV",
            "paths": [
                {
                    "path": "/Alarms/Alarm",
                    "type": "enum",
                    "name": "Alarm",
                    "enum": {
                        "0": "No alarm",
                        "2": "Alarm"
                    }
                },
                {
                    "path": "/Alarms/HighStarterVoltage",
                    "type": "enum",
                    "name": "High starter-voltage alarm",
                    "enum": {
                        "0": "No alarm",
                        "2": "Alarm"
                    }
                },
                {
                    "path": "/Alarms/HighTemperature",
                    "type": "enum",
                    "name": "High battery temperature alarm",
                    "enum": {
                        "0": "No alarm",
                        "2": "Alarm"
                    }
                },
                {
                    "path": "/Alarms/HighVoltage",
                    "type": "enum",
                    "name": "High voltage alarm",
                    "enum": {
                        "0": "No alarm",
                        "2": "Alarm"
                    }
                },
                {
                    "path": "/Alarms/LowSoc",
                    "type": "enum",
                    "name": "Low state-of-charge alarm",
                    "enum": {
                        "0": "No alarm",
                        "2": "Alarm"
                    }
                },
                {
                    "path": "/Alarms/LowStarterVoltage",
                    "type": "enum",
                    "name": "Low starter-voltage alarm",
                    "enum": {
                        "0": "No alarm",
                        "2": "Alarm"
                    }
                },
                {
                    "path": "/Alarms/LowTemperature",
                    "type": "enum",
                    "name": "Low battery temperature alarm",
                    "enum": {
                        "0": "No alarm",
                        "2": "Alarm"
                    }
                },
                {
                    "path": "/Alarms/LowVoltage",
                    "type": "enum",
                    "name": "Low voltage alarm",
                    "enum": {
                        "0": "No alarm",
                        "2": "Alarm"
                    }
                },
                {
                    "path": "/Alarms/MidVoltage",
                    "type": "enum",
                    "name": "Mid-voltage alarm",
                    "enum": {
                        "0": "No alarm",
                        "2": "Alarm"
                    }
                },
                {
                    "path": "/ConsumedAmphours",
                    "type": "float",
                    "name": "Consumed Amphours (Ah)"
                },
                {
                    "path": "/Dc/0/Current",
                    "type": "float",
                    "name": "Current (A)"
                },
                {
                    "path": "/Dc/0/MidVoltage",
                    "type": "float",
                    "name": "Mid-point voltage of the battery bank (V)"
                },
                {
                    "path": "/Dc/0/MidVoltageDeviation",
                    "type": "float",
                    "name": "Mid-point deviation of the battery bank (%)"
                },
                {
                    "path": "/Dc/0/Temperature",
                    "type": "float",
                    "name": "Battery temperature (C)"
                },
                {
                    "path": "/Dc/0/Voltage",
                    "type": "float",
                    "name": "Voltage (V)"
                },
                {
                    "path": "/Dc/1/Voltage",
                    "type": "float",
                    "name": "Starter battery voltage (V)"
                },
                {
                    "path": "/History/AutomaticSyncs",
                    "type": "float",
                    "name": "Automatic syncs (count)"
                },
                {
                    "path": "/History/AverageDischarge",
                    "type": "float",
                    "name": "Average discharge (Ah)"
                },
                {
                    "path": "/History/ChargeCycles",
                    "type": "float",
                    "name": "Charge cycles (count)"
                },
                {
                    "path": "/History/ChargedEnergy",
                    "type": "float",
                    "name": "Charged Energy (kWh)"
                },
                {
                    "path": "/History/DeepestDischarge",
                    "type": "float",
                    "name": "Deepest discharge (Ah)"
                },
                {
                    "path": "/History/DischargedEnergy",
                    "type": "float",
                    "name": "Discharged Energy (kWh)"
                },
                {
                    "path": "/History/FullDischarges",
                    "type": "float",
                    "name": "Full discharges (count)"
                },
                {
                    "path": "/History/HighStarterVoltageAlarms",
                    "type": "float",
                    "name": "High starter voltage alarms (count)"
                },
                {
                    "path": "/History/HighVoltageAlarms",
                    "type": "float",
                    "name": "High voltage alarms (count)"
                },
                {
                    "path": "/History/LastDischarge",
                    "type": "float",
                    "name": "Last discharge (Ah)"
                },
                {
                    "path": "/History/LowStarterVoltageAlarms",
                    "type": "float",
                    "name": "Low starter voltage alarms (count)"
                },
                {
                    "path": "/History/LowVoltageAlarms",
                    "type": "float",
                    "name": "Low voltage alarms (count)"
                },
                {
                    "path": "/History/MaximumStarterVoltage",
                    "type": "float",
                    "name": "Maximum starter voltage (V DC)"
                },
                {
                    "path": "/History/MaximumVoltage",
                    "type": "float",
                    "name": "Maximum voltage (V DC)"
                },
                {
                    "path": "/History/MinimumStarterVoltage",
                    "type": "float",
                    "name": "Minimum starter voltage (V DC)"
                },
                {
                    "path": "/History/MinimumVoltage",
                    "type": "float",
                    "name": "Minimum voltage (V DC)"
                },
                {
                    "path": "/History/TimeSinceLastFullCharge",
                    "type": "float",
                    "name": "Time since last full charge (seconds)"
                },
                {
                    "path": "/History/TotalAhDrawn",
                    "type": "float",
                    "name": "Total Ah drawn (Ah)"
                },
                {
                    "path": "/Relay/0/State",
                    "type": "enum",
                    "name": "Relay status",
                    "enum": {
                        "0": "Open",
                        "1": "Closed"
                    }
                },
                {
                    "path": "/Soc",
                    "type": "float",
                    "name": "State of charge (%)"
                },
                {
                    "path": "/TimeToGo",
                    "type": "float",
                    "name": "Time to go (h)"
                }
            ]
        },
        "pathObj": {
            "path": "/Dc/0/Current",
            "type": "float",
            "name": "Current (A)"
        },
        "initial": "",
        "name": "",
        "x": 370,
        "y": 620,
        "wires": [
            [
                "ad9f294e07431854"
            ]
        ]
    },
    {
        "id": "b3c0a538005709de",
        "type": "victron-input-battery",
        "z": "1ceb83823bf626ce",
        "g": "222a409ae4cf9855",
        "service": "com.victronenergy.battery.ttyS5",
        "path": "/Soc",
        "serviceObj": {
            "service": "com.victronenergy.battery.ttyS5",
            "name": "SmartShunt 500A/50mV",
            "paths": [
                {
                    "path": "/Alarms/Alarm",
                    "type": "enum",
                    "name": "Alarm",
                    "enum": {
                        "0": "No alarm",
                        "2": "Alarm"
                    }
                },
                {
                    "path": "/Alarms/HighStarterVoltage",
                    "type": "enum",
                    "name": "High starter-voltage alarm",
                    "enum": {
                        "0": "No alarm",
                        "2": "Alarm"
                    }
                },
                {
                    "path": "/Alarms/HighTemperature",
                    "type": "enum",
                    "name": "High battery temperature alarm",
                    "enum": {
                        "0": "No alarm",
                        "2": "Alarm"
                    }
                },
                {
                    "path": "/Alarms/HighVoltage",
                    "type": "enum",
                    "name": "High voltage alarm",
                    "enum": {
                        "0": "No alarm",
                        "2": "Alarm"
                    }
                },
                {
                    "path": "/Alarms/LowSoc",
                    "type": "enum",
                    "name": "Low state-of-charge alarm",
                    "enum": {
                        "0": "No alarm",
                        "2": "Alarm"
                    }
                },
                {
                    "path": "/Alarms/LowStarterVoltage",
                    "type": "enum",
                    "name": "Low starter-voltage alarm",
                    "enum": {
                        "0": "No alarm",
                        "2": "Alarm"
                    }
                },
                {
                    "path": "/Alarms/LowTemperature",
                    "type": "enum",
                    "name": "Low battery temperature alarm",
                    "enum": {
                        "0": "No alarm",
                        "2": "Alarm"
                    }
                },
                {
                    "path": "/Alarms/LowVoltage",
                    "type": "enum",
                    "name": "Low voltage alarm",
                    "enum": {
                        "0": "No alarm",
                        "2": "Alarm"
                    }
                },
                {
                    "path": "/Alarms/MidVoltage",
                    "type": "enum",
                    "name": "Mid-voltage alarm",
                    "enum": {
                        "0": "No alarm",
                        "2": "Alarm"
                    }
                },
                {
                    "path": "/ConsumedAmphours",
                    "type": "float",
                    "name": "Consumed Amphours (Ah)"
                },
                {
                    "path": "/Dc/0/Current",
                    "type": "float",
                    "name": "Current (A)"
                },
                {
                    "path": "/Dc/0/MidVoltage",
                    "type": "float",
                    "name": "Mid-point voltage of the battery bank (V)"
                },
                {
                    "path": "/Dc/0/MidVoltageDeviation",
                    "type": "float",
                    "name": "Mid-point deviation of the battery bank (%)"
                },
                {
                    "path": "/Dc/0/Temperature",
                    "type": "float",
                    "name": "Battery temperature (C)"
                },
                {
                    "path": "/Dc/0/Voltage",
                    "type": "float",
                    "name": "Voltage (V)"
                },
                {
                    "path": "/Dc/1/Voltage",
                    "type": "float",
                    "name": "Starter battery voltage (V)"
                },
                {
                    "path": "/History/AutomaticSyncs",
                    "type": "float",
                    "name": "Automatic syncs (count)"
                },
                {
                    "path": "/History/AverageDischarge",
                    "type": "float",
                    "name": "Average discharge (Ah)"
                },
                {
                    "path": "/History/ChargeCycles",
                    "type": "float",
                    "name": "Charge cycles (count)"
                },
                {
                    "path": "/History/ChargedEnergy",
                    "type": "float",
                    "name": "Charged Energy (kWh)"
                },
                {
                    "path": "/History/DeepestDischarge",
                    "type": "float",
                    "name": "Deepest discharge (Ah)"
                },
                {
                    "path": "/History/DischargedEnergy",
                    "type": "float",
                    "name": "Discharged Energy (kWh)"
                },
                {
                    "path": "/History/FullDischarges",
                    "type": "float",
                    "name": "Full discharges (count)"
                },
                {
                    "path": "/History/HighStarterVoltageAlarms",
                    "type": "float",
                    "name": "High starter voltage alarms (count)"
                },
                {
                    "path": "/History/HighVoltageAlarms",
                    "type": "float",
                    "name": "High voltage alarms (count)"
                },
                {
                    "path": "/History/LastDischarge",
                    "type": "float",
                    "name": "Last discharge (Ah)"
                },
                {
                    "path": "/History/LowStarterVoltageAlarms",
                    "type": "float",
                    "name": "Low starter voltage alarms (count)"
                },
                {
                    "path": "/History/LowVoltageAlarms",
                    "type": "float",
                    "name": "Low voltage alarms (count)"
                },
                {
                    "path": "/History/MaximumStarterVoltage",
                    "type": "float",
                    "name": "Maximum starter voltage (V DC)"
                },
                {
                    "path": "/History/MaximumVoltage",
                    "type": "float",
                    "name": "Maximum voltage (V DC)"
                },
                {
                    "path": "/History/MinimumStarterVoltage",
                    "type": "float",
                    "name": "Minimum starter voltage (V DC)"
                },
                {
                    "path": "/History/MinimumVoltage",
                    "type": "float",
                    "name": "Minimum voltage (V DC)"
                },
                {
                    "path": "/History/TimeSinceLastFullCharge",
                    "type": "float",
                    "name": "Time since last full charge (seconds)"
                },
                {
                    "path": "/History/TotalAhDrawn",
                    "type": "float",
                    "name": "Total Ah drawn (Ah)"
                },
                {
                    "path": "/Relay/0/State",
                    "type": "enum",
                    "name": "Relay status",
                    "enum": {
                        "0": "Open",
                        "1": "Closed"
                    }
                },
                {
                    "path": "/Soc",
                    "type": "float",
                    "name": "State of charge (%)"
                },
                {
                    "path": "/TimeToGo",
                    "type": "float",
                    "name": "Time to go (h)"
                }
            ]
        },
        "pathObj": {
            "path": "/Soc",
            "type": "float",
            "name": "State of charge (%)"
        },
        "initial": "",
        "name": "",
        "x": 390,
        "y": 680,
        "wires": [
            [
                "3f6acb6de37723eb"
            ]
        ]
    },
    {
        "id": "ad9f294e07431854",
        "type": "change",
        "z": "1ceb83823bf626ce",
        "g": "222a409ae4cf9855",
        "name": "flow.current",
        "rules": [
            {
                "t": "set",
                "p": "Current",
                "pt": "flow",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 670,
        "y": 620,
        "wires": [
            []
        ]
    },
    {
        "id": "3f6acb6de37723eb",
        "type": "change",
        "z": "1ceb83823bf626ce",
        "g": "222a409ae4cf9855",
        "name": "flow.soc",
        "rules": [
            {
                "t": "set",
                "p": "Soc",
                "pt": "flow",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 660,
        "y": 680,
        "wires": [
            []
        ]
    },
    {
        "id": "7dce6425b3d8dad5",
        "type": "victron-input-battery",
        "z": "1ceb83823bf626ce",
        "g": "222a409ae4cf9855",
        "service": "com.victronenergy.battery.ttyS5",
        "path": "/Dc/0/Voltage",
        "serviceObj": {
            "service": "com.victronenergy.battery.ttyS5",
            "name": "SmartShunt 500A/50mV",
            "paths": [
                {
                    "path": "/Alarms/Alarm",
                    "type": "enum",
                    "name": "Alarm",
                    "enum": {
                        "0": "No alarm",
                        "2": "Alarm"
                    }
                },
                {
                    "path": "/Alarms/HighStarterVoltage",
                    "type": "enum",
                    "name": "High starter-voltage alarm",
                    "enum": {
                        "0": "No alarm",
                        "2": "Alarm"
                    }
                },
                {
                    "path": "/Alarms/HighTemperature",
                    "type": "enum",
                    "name": "High battery temperature alarm",
                    "enum": {
                        "0": "No alarm",
                        "2": "Alarm"
                    }
                },
                {
                    "path": "/Alarms/HighVoltage",
                    "type": "enum",
                    "name": "High voltage alarm",
                    "enum": {
                        "0": "No alarm",
                        "2": "Alarm"
                    }
                },
                {
                    "path": "/Alarms/LowSoc",
                    "type": "enum",
                    "name": "Low state-of-charge alarm",
                    "enum": {
                        "0": "No alarm",
                        "2": "Alarm"
                    }
                },
                {
                    "path": "/Alarms/LowStarterVoltage",
                    "type": "enum",
                    "name": "Low starter-voltage alarm",
                    "enum": {
                        "0": "No alarm",
                        "2": "Alarm"
                    }
                },
                {
                    "path": "/Alarms/LowTemperature",
                    "type": "enum",
                    "name": "Low battery temperature alarm",
                    "enum": {
                        "0": "No alarm",
                        "2": "Alarm"
                    }
                },
                {
                    "path": "/Alarms/LowVoltage",
                    "type": "enum",
                    "name": "Low voltage alarm",
                    "enum": {
                        "0": "No alarm",
                        "2": "Alarm"
                    }
                },
                {
                    "path": "/Alarms/MidVoltage",
                    "type": "enum",
                    "name": "Mid-voltage alarm",
                    "enum": {
                        "0": "No alarm",
                        "2": "Alarm"
                    }
                },
                {
                    "path": "/ConsumedAmphours",
                    "type": "float",
                    "name": "Consumed Amphours (Ah)"
                },
                {
                    "path": "/Dc/0/Current",
                    "type": "float",
                    "name": "Current (A)"
                },
                {
                    "path": "/Dc/0/MidVoltage",
                    "type": "float",
                    "name": "Mid-point voltage of the battery bank (V)"
                },
                {
                    "path": "/Dc/0/MidVoltageDeviation",
                    "type": "float",
                    "name": "Mid-point deviation of the battery bank (%)"
                },
                {
                    "path": "/Dc/0/Temperature",
                    "type": "float",
                    "name": "Battery temperature (C)"
                },
                {
                    "path": "/Dc/0/Voltage",
                    "type": "float",
                    "name": "Voltage (V)"
                },
                {
                    "path": "/Dc/1/Voltage",
                    "type": "float",
                    "name": "Starter battery voltage (V)"
                },
                {
                    "path": "/History/AutomaticSyncs",
                    "type": "float",
                    "name": "Automatic syncs (count)"
                },
                {
                    "path": "/History/AverageDischarge",
                    "type": "float",
                    "name": "Average discharge (Ah)"
                },
                {
                    "path": "/History/ChargeCycles",
                    "type": "float",
                    "name": "Charge cycles (count)"
                },
                {
                    "path": "/History/ChargedEnergy",
                    "type": "float",
                    "name": "Charged Energy (kWh)"
                },
                {
                    "path": "/History/DeepestDischarge",
                    "type": "float",
                    "name": "Deepest discharge (Ah)"
                },
                {
                    "path": "/History/DischargedEnergy",
                    "type": "float",
                    "name": "Discharged Energy (kWh)"
                },
                {
                    "path": "/History/FullDischarges",
                    "type": "float",
                    "name": "Full discharges (count)"
                },
                {
                    "path": "/History/HighStarterVoltageAlarms",
                    "type": "float",
                    "name": "High starter voltage alarms (count)"
                },
                {
                    "path": "/History/HighVoltageAlarms",
                    "type": "float",
                    "name": "High voltage alarms (count)"
                },
                {
                    "path": "/History/LastDischarge",
                    "type": "float",
                    "name": "Last discharge (Ah)"
                },
                {
                    "path": "/History/LowStarterVoltageAlarms",
                    "type": "float",
                    "name": "Low starter voltage alarms (count)"
                },
                {
                    "path": "/History/LowVoltageAlarms",
                    "type": "float",
                    "name": "Low voltage alarms (count)"
                },
                {
                    "path": "/History/MaximumStarterVoltage",
                    "type": "float",
                    "name": "Maximum starter voltage (V DC)"
                },
                {
                    "path": "/History/MaximumVoltage",
                    "type": "float",
                    "name": "Maximum voltage (V DC)"
                },
                {
                    "path": "/History/MinimumStarterVoltage",
                    "type": "float",
                    "name": "Minimum starter voltage (V DC)"
                },
                {
                    "path": "/History/MinimumVoltage",
                    "type": "float",
                    "name": "Minimum voltage (V DC)"
                },
                {
                    "path": "/History/TimeSinceLastFullCharge",
                    "type": "float",
                    "name": "Time since last full charge (seconds)"
                },
                {
                    "path": "/History/TotalAhDrawn",
                    "type": "float",
                    "name": "Total Ah drawn (Ah)"
                },
                {
                    "path": "/Relay/0/State",
                    "type": "enum",
                    "name": "Relay status",
                    "enum": {
                        "0": "Open",
                        "1": "Closed"
                    }
                },
                {
                    "path": "/Soc",
                    "type": "float",
                    "name": "State of charge (%)"
                },
                {
                    "path": "/TimeToGo",
                    "type": "float",
                    "name": "Time to go (h)"
                }
            ]
        },
        "pathObj": {
            "path": "/Dc/0/Voltage",
            "type": "float",
            "name": "Voltage (V)"
        },
        "initial": "",
        "name": "",
        "x": 370,
        "y": 740,
        "wires": [
            [
                "6f75e576640949e1"
            ]
        ]
    },
    {
        "id": "6f75e576640949e1",
        "type": "change",
        "z": "1ceb83823bf626ce",
        "g": "222a409ae4cf9855",
        "name": "flow.voltage",
        "rules": [
            {
                "t": "set",
                "p": "Voltage",
                "pt": "flow",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 670,
        "y": 740,
        "wires": [
            []
        ]
    },
    {
        "id": "09e67f6b2fcded8c",
        "type": "modbus-getter",
        "z": "1ceb83823bf626ce",
        "name": "get min cell voltage",
        "showStatusActivities": false,
        "showErrors": false,
        "showWarnings": true,
        "logIOActivities": false,
        "unitid": "1",
        "dataType": "HoldingRegister",
        "adr": "1290",
        "quantity": "1",
        "server": "f3d4d006239162ec",
        "useIOFile": false,
        "ioFile": "",
        "useIOForPayload": false,
        "emptyMsgOnFail": false,
        "keepMsgProperties": true,
        "delayOnStart": false,
        "startDelayTime": "",
        "x": 430,
        "y": 840,
        "wires": [
            [
                "1870d52ae22bc658"
            ],
            []
        ]
    },
    {
        "id": "028bae00e0ebe91c",
        "type": "modbus-getter",
        "z": "1ceb83823bf626ce",
        "name": "get min cell voltage",
        "showStatusActivities": false,
        "showErrors": false,
        "showWarnings": true,
        "logIOActivities": false,
        "unitid": "2",
        "dataType": "HoldingRegister",
        "adr": "1290",
        "quantity": "1",
        "server": "f3d4d006239162ec",
        "useIOFile": false,
        "ioFile": "",
        "useIOForPayload": false,
        "emptyMsgOnFail": false,
        "keepMsgProperties": true,
        "delayOnStart": false,
        "startDelayTime": "",
        "x": 430,
        "y": 880,
        "wires": [
            [
                "f3d8b797bac8734f"
            ],
            []
        ]
    },
    {
        "id": "38e295140ea916bf",
        "type": "modbus-getter",
        "z": "1ceb83823bf626ce",
        "name": "get min cell voltage",
        "showStatusActivities": false,
        "showErrors": false,
        "showWarnings": true,
        "logIOActivities": false,
        "unitid": "3",
        "dataType": "HoldingRegister",
        "adr": "1290",
        "quantity": "1",
        "server": "f3d4d006239162ec",
        "useIOFile": false,
        "ioFile": "",
        "useIOForPayload": false,
        "emptyMsgOnFail": false,
        "keepMsgProperties": true,
        "delayOnStart": false,
        "startDelayTime": "",
        "x": 430,
        "y": 920,
        "wires": [
            [
                "75b5e73ac8be721a"
            ],
            []
        ]
    },
    {
        "id": "f216f6ca6f08330b",
        "type": "modbus-getter",
        "z": "1ceb83823bf626ce",
        "name": "get min cell voltage",
        "showStatusActivities": false,
        "showErrors": false,
        "showWarnings": true,
        "logIOActivities": false,
        "unitid": "4",
        "dataType": "HoldingRegister",
        "adr": "1290",
        "quantity": "1",
        "server": "f3d4d006239162ec",
        "useIOFile": false,
        "ioFile": "",
        "useIOForPayload": false,
        "emptyMsgOnFail": false,
        "keepMsgProperties": true,
        "delayOnStart": false,
        "startDelayTime": "",
        "x": 430,
        "y": 960,
        "wires": [
            [
                "f5885171fe40d66d"
            ],
            []
        ]
    },
    {
        "id": "21e1bdd2478d561b",
        "type": "modbus-getter",
        "z": "1ceb83823bf626ce",
        "name": "get max cell voltage",
        "showStatusActivities": false,
        "showErrors": false,
        "showWarnings": true,
        "logIOActivities": false,
        "unitid": "1",
        "dataType": "HoldingRegister",
        "adr": "1291",
        "quantity": "1",
        "server": "f3d4d006239162ec",
        "useIOFile": false,
        "ioFile": "",
        "useIOForPayload": false,
        "emptyMsgOnFail": false,
        "keepMsgProperties": true,
        "delayOnStart": true,
        "startDelayTime": "",
        "x": 440,
        "y": 1080,
        "wires": [
            [
                "2db9d3181e3e30fe"
            ],
            []
        ]
    },
    {
        "id": "488a296253b83217",
        "type": "modbus-getter",
        "z": "1ceb83823bf626ce",
        "name": "get max cell voltage",
        "showStatusActivities": false,
        "showErrors": false,
        "showWarnings": true,
        "logIOActivities": false,
        "unitid": "2",
        "dataType": "HoldingRegister",
        "adr": "1291",
        "quantity": "1",
        "server": "f3d4d006239162ec",
        "useIOFile": false,
        "ioFile": "",
        "useIOForPayload": false,
        "emptyMsgOnFail": false,
        "keepMsgProperties": true,
        "delayOnStart": false,
        "startDelayTime": "",
        "x": 440,
        "y": 1120,
        "wires": [
            [
                "809358fdb56a221a"
            ],
            []
        ]
    },
    {
        "id": "adfb4ca66da36554",
        "type": "modbus-getter",
        "z": "1ceb83823bf626ce",
        "name": "get max cell voltage",
        "showStatusActivities": false,
        "showErrors": false,
        "showWarnings": true,
        "logIOActivities": false,
        "unitid": "3",
        "dataType": "HoldingRegister",
        "adr": "1291",
        "quantity": "1",
        "server": "f3d4d006239162ec",
        "useIOFile": false,
        "ioFile": "",
        "useIOForPayload": false,
        "emptyMsgOnFail": false,
        "keepMsgProperties": true,
        "delayOnStart": false,
        "startDelayTime": "",
        "x": 440,
        "y": 1160,
        "wires": [
            [
                "b983c8e520366000"
            ],
            []
        ]
    },
    {
        "id": "21d711f47e2dcc6b",
        "type": "modbus-getter",
        "z": "1ceb83823bf626ce",
        "name": "get max cell voltage",
        "showStatusActivities": false,
        "showErrors": false,
        "showWarnings": true,
        "logIOActivities": false,
        "unitid": "4",
        "dataType": "HoldingRegister",
        "adr": "1291",
        "quantity": "1",
        "server": "f3d4d006239162ec",
        "useIOFile": false,
        "ioFile": "",
        "useIOForPayload": false,
        "emptyMsgOnFail": false,
        "keepMsgProperties": true,
        "delayOnStart": false,
        "startDelayTime": "",
        "x": 440,
        "y": 1200,
        "wires": [
            [
                "cf1cfbbf8bcc2ff6"
            ],
            []
        ]
    },
    {
        "id": "feec784551f7da5e",
        "type": "inject",
        "z": "1ceb83823bf626ce",
        "g": "63e881f2502c39c4",
        "name": "every sec",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "1",
        "crontab": "",
        "once": true,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 290,
        "y": 1280,
        "wires": [
            [
                "2c767dedb9794c94",
                "5d17457c95b5970b",
                "21d711f47e2dcc6b",
                "adfb4ca66da36554",
                "488a296253b83217",
                "21e1bdd2478d561b",
                "f216f6ca6f08330b",
                "38e295140ea916bf",
                "028bae00e0ebe91c",
                "09e67f6b2fcded8c"
            ]
        ]
    },
    {
        "id": "2c767dedb9794c94",
        "type": "function",
        "z": "1ceb83823bf626ce",
        "g": "63e881f2502c39c4",
        "name": "calculate max (dis)charge current / charge voltage",
        "func": "msg.maxChargeCurrent = 200\nmsg.maxDischargeCurrent = 200\nmsg.modulesBlockingCharge = 0\nmsg.maxChargeVoltage = 55.20\n\n//getting current measured values\nlet bankVoltage = flow.get('Voltage')\nlet soc = flow.get('Soc')\n\nlet minCellV = flow.get('MinCellVoltage')\nlet maxCellV = flow.get('MaxCellVoltage')\n\n// ------------------------- CHANGING (DIS)Charge currents based on SOC ---------------------- //\nif(soc >= 95){\n    msg.maxChargeCurrent /= 4 //200 amps * 48v = 9.6Kwh / 4 = 2.4Kwh\n    msg.maxChargeVoltage = 54.20\n}\nelse if(soc >= 80){\n    msg.maxChargeCurrent /= 2 //200 amps * 48v = 9.6Kwh / 2 = 4.8Kwh\n    msg.maxChargeVoltage = 54.20\n}\n\nif(soc <= 2){\n    msg.maxDischargeCurrent /= 4 //200 amps * 48v = 9.6Kwh / 4 = 2.4Kwh\n}\nelse if(soc <= 5){\n    msg.maxDischargeCurrent /= 2 //200 amps * 48v = 9.6Kwh / 2 = 4.8Kwh\n}\n\n\n// ------------------------- LAST LINE OF DEFENSE ----------------- //\n\n\nif(maxCellV >= 3.55){ \n    msg.maxChargeCurrent = 0\n    msg.maxChargeVoltage = 53.80\n}\nelse if(maxCellV >= 3.53){ \n    //msg.maxChargeCurrent = 0//16 // = 2.4Kwh\n    msg.maxChargeVoltage = 53.80\n}\nelse if(maxCellV >= 3.50){ \n    //msg.maxChargeCurrent = 0//16 // = 2.4Kwh\n    msg.maxChargeVoltage = 54.00\n}\n/*\nelse if(maxCellV >= 3.47){ \n    //msg.maxChargeCurrent = 0//16 // = 2.4Kwh\n    msg.maxChargeVoltage = 54.60 //54.6\n}\nelse if(maxCellV >= 3.45){ \n    //msg.maxChargeCurrent = 0//16 // = 2.4Kwh\n    msg.maxChargeVoltage = 54.8 //54.80\n}\n*/\n//else dus 55.2 = 3.45v per cell\n\n\nif(minCellV <= 2.60){ //2.6\n    msg.maxDischargeCurrent = 0\n}\nelse if (minCellV <= 2.70) //2.7\n{\n    msg.maxDischargeCurrent /= 4 //200 amps * 48v = 9.6Kwh / 4 = 2.4Kwh\n}\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 450,
        "y": 1440,
        "wires": [
            [
                "674da6b6fc86a5c9",
                "c2af3567952dc598",
                "2dc1d934571b9bd2"
            ]
        ]
    },
    {
        "id": "c2af3567952dc598",
        "type": "change",
        "z": "1ceb83823bf626ce",
        "g": "63e881f2502c39c4",
        "name": "flow.MaxChargeCurrent",
        "rules": [
            {
                "t": "set",
                "p": "MaxChargeCurrent",
                "pt": "flow",
                "to": "maxChargeCurrent",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 990,
        "y": 1420,
        "wires": [
            []
        ]
    },
    {
        "id": "2dc1d934571b9bd2",
        "type": "change",
        "z": "1ceb83823bf626ce",
        "g": "63e881f2502c39c4",
        "name": "flow.MaxDischargeCurrent",
        "rules": [
            {
                "t": "set",
                "p": "MaxDischargeCurrent",
                "pt": "flow",
                "to": "maxDischargeCurrent",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1000,
        "y": 1380,
        "wires": [
            []
        ]
    },
    {
        "id": "5d17457c95b5970b",
        "type": "function",
        "z": "1ceb83823bf626ce",
        "g": "63e881f2502c39c4",
        "name": "calculate power",
        "func": "let bankVoltage = flow.get('Voltage')\nlet bankCurrent = flow.get('Current')\n\nmsg.payload = bankVoltage * bankCurrent\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 500,
        "y": 1340,
        "wires": [
            [
                "09716c3d6333d5d6"
            ]
        ]
    },
    {
        "id": "09716c3d6333d5d6",
        "type": "change",
        "z": "1ceb83823bf626ce",
        "g": "63e881f2502c39c4",
        "name": "flow.Power",
        "rules": [
            {
                "t": "set",
                "p": "Power",
                "pt": "flow",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 950,
        "y": 1340,
        "wires": [
            [
                "6992644613867616"
            ]
        ]
    },
    {
        "id": "6caf8c314a8f60c7",
        "type": "change",
        "z": "1ceb83823bf626ce",
        "g": "63e881f2502c39c4",
        "name": "flow.MaxChargeVoltage",
        "rules": [
            {
                "t": "set",
                "p": "MaxChargeVoltage",
                "pt": "flow",
                "to": "maxChargeVoltage",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 990,
        "y": 1280,
        "wires": [
            [
                "6992644613867616"
            ]
        ]
    },
    {
        "id": "1017018f225b181e",
        "type": "function",
        "z": "1ceb83823bf626ce",
        "g": "63e881f2502c39c4",
        "name": "get smallest",
        "func": "let arr = msg.payload\n\nif(arr.length == 2)\n{\n    let firstval = arr[0]\n    let secondval = arr[1]\n    \n    msg.payload = Math.min(firstval,secondval)\n    \n    return msg\n}\nelse{\n    node.error('array smallest not 2')\n    //safety measure\n    msg.payload = 3.65\n    return msg\n}\n\n\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1110,
        "y": 900,
        "wires": [
            [
                "c6359613b6dc6e3d"
            ]
        ]
    },
    {
        "id": "1870d52ae22bc658",
        "type": "function",
        "z": "1ceb83823bf626ce",
        "g": "63e881f2502c39c4",
        "name": "transform u to signed",
        "func": "const buf = Buffer.allocUnsafe(2);\n\nbuf.writeUInt16LE(msg.responseBuffer.data[0], 0);\n\nmsg = {};\nmsg.payload = buf.readInt16LE(0);\n\nmsg.payload /= 100\n\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 720,
        "y": 840,
        "wires": [
            [
                "1209edc424942856"
            ]
        ]
    },
    {
        "id": "e9e06447ab8915e1",
        "type": "change",
        "z": "1ceb83823bf626ce",
        "g": "63e881f2502c39c4",
        "name": "flow.MinCellVoltage",
        "rules": [
            {
                "t": "set",
                "p": "MinCellVoltage",
                "pt": "flow",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1670,
        "y": 900,
        "wires": [
            [
                "6992644613867616"
            ]
        ]
    },
    {
        "id": "4d7a0663cecacc8b",
        "type": "change",
        "z": "1ceb83823bf626ce",
        "g": "63e881f2502c39c4",
        "name": "flow.MaxCellVoltage",
        "rules": [
            {
                "t": "set",
                "p": "MaxCellVoltage",
                "pt": "flow",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1680,
        "y": 1180,
        "wires": [
            [
                "6992644613867616",
                "6199e5585be19a82"
            ]
        ]
    },
    {
        "id": "1209edc424942856",
        "type": "join",
        "z": "1ceb83823bf626ce",
        "g": "63e881f2502c39c4",
        "name": "",
        "mode": "custom",
        "build": "array",
        "property": "payload",
        "propertyType": "msg",
        "key": "topic",
        "joiner": "\\n",
        "joinerType": "str",
        "accumulate": false,
        "timeout": "0.5",
        "count": "",
        "reduceRight": false,
        "reduceExp": "",
        "reduceInit": "",
        "reduceInitType": "",
        "reduceFixup": "",
        "x": 930,
        "y": 900,
        "wires": [
            [
                "1017018f225b181e"
            ]
        ]
    },
    {
        "id": "f3d8b797bac8734f",
        "type": "function",
        "z": "1ceb83823bf626ce",
        "g": "63e881f2502c39c4",
        "name": "transform u to signed",
        "func": "const buf = Buffer.allocUnsafe(2);\n\nbuf.writeUInt16LE(msg.responseBuffer.data[0], 0);\n\nmsg = {};\nmsg.payload = buf.readInt16LE(0);\n\nmsg.payload /= 100\n\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 720,
        "y": 880,
        "wires": [
            [
                "1209edc424942856"
            ]
        ]
    },
    {
        "id": "75b5e73ac8be721a",
        "type": "function",
        "z": "1ceb83823bf626ce",
        "g": "63e881f2502c39c4",
        "name": "transform u to signed",
        "func": "const buf = Buffer.allocUnsafe(2);\n\nbuf.writeUInt16LE(msg.responseBuffer.data[0], 0);\n\nmsg = {};\nmsg.payload = buf.readInt16LE(0);\n\nmsg.payload /= 100\n\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 720,
        "y": 920,
        "wires": [
            [
                "1209edc424942856"
            ]
        ]
    },
    {
        "id": "f5885171fe40d66d",
        "type": "function",
        "z": "1ceb83823bf626ce",
        "g": "63e881f2502c39c4",
        "name": "transform u to signed",
        "func": "const buf = Buffer.allocUnsafe(2);\n\nbuf.writeUInt16LE(msg.responseBuffer.data[0], 0);\n\nmsg = {};\nmsg.payload = buf.readInt16LE(0);\n\nmsg.payload /= 100\n\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 720,
        "y": 960,
        "wires": [
            [
                "1209edc424942856"
            ]
        ]
    },
    {
        "id": "8b5feac3f604635d",
        "type": "join",
        "z": "1ceb83823bf626ce",
        "g": "63e881f2502c39c4",
        "name": "",
        "mode": "custom",
        "build": "array",
        "property": "payload",
        "propertyType": "msg",
        "key": "topic",
        "joiner": "\\n",
        "joinerType": "str",
        "accumulate": false,
        "timeout": "0.5",
        "count": "",
        "reduceRight": false,
        "reduceExp": "",
        "reduceInit": "",
        "reduceInitType": "",
        "reduceFixup": "",
        "x": 910,
        "y": 1180,
        "wires": [
            [
                "4cd8855c1ce4b800"
            ]
        ]
    },
    {
        "id": "4cd8855c1ce4b800",
        "type": "function",
        "z": "1ceb83823bf626ce",
        "g": "63e881f2502c39c4",
        "name": "get largest",
        "func": "let arr = msg.payload\n\nif(arr.length == 2)\n{\n    let firstval = arr[0]\n    let secondval = arr[1]\n    \n    msg.payload = Math.max(firstval,secondval)\n    \n    return msg\n}\nelse{\n    node.error('array largest not 2')\n    \n    //safety measure\n    msg.payload = 3.65\n    return msg\n}\n\n\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1090,
        "y": 1180,
        "wires": [
            [
                "3bd638416fccd21c"
            ]
        ]
    },
    {
        "id": "2db9d3181e3e30fe",
        "type": "function",
        "z": "1ceb83823bf626ce",
        "g": "63e881f2502c39c4",
        "name": "transform u to signed",
        "func": "const buf = Buffer.allocUnsafe(2);\n\nbuf.writeUInt16LE(msg.responseBuffer.data[0], 0);\n\nmsg = {};\nmsg.payload = buf.readInt16LE(0);\n\nmsg.payload /= 100\n\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 720,
        "y": 1060,
        "wires": [
            [
                "8b5feac3f604635d"
            ]
        ]
    },
    {
        "id": "809358fdb56a221a",
        "type": "function",
        "z": "1ceb83823bf626ce",
        "g": "63e881f2502c39c4",
        "name": "transform u to signed",
        "func": "const buf = Buffer.allocUnsafe(2);\n\nbuf.writeUInt16LE(msg.responseBuffer.data[0], 0);\n\nmsg = {};\nmsg.payload = buf.readInt16LE(0);\n\nmsg.payload /= 100\n\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 720,
        "y": 1100,
        "wires": [
            [
                "8b5feac3f604635d"
            ]
        ]
    },
    {
        "id": "b983c8e520366000",
        "type": "function",
        "z": "1ceb83823bf626ce",
        "g": "63e881f2502c39c4",
        "name": "transform u to signed",
        "func": "const buf = Buffer.allocUnsafe(2);\n\nbuf.writeUInt16LE(msg.responseBuffer.data[0], 0);\n\nmsg = {};\nmsg.payload = buf.readInt16LE(0);\n\nmsg.payload /= 100\n\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 720,
        "y": 1140,
        "wires": [
            [
                "8b5feac3f604635d"
            ]
        ]
    },
    {
        "id": "cf1cfbbf8bcc2ff6",
        "type": "function",
        "z": "1ceb83823bf626ce",
        "g": "63e881f2502c39c4",
        "name": "transform u to signed",
        "func": "const buf = Buffer.allocUnsafe(2);\n\nbuf.writeUInt16LE(msg.responseBuffer.data[0], 0);\n\nmsg = {};\nmsg.payload = buf.readInt16LE(0);\n\nmsg.payload /= 100\n\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 720,
        "y": 1180,
        "wires": [
            [
                "8b5feac3f604635d"
            ]
        ]
    },
    {
        "id": "674da6b6fc86a5c9",
        "type": "change",
        "z": "1ceb83823bf626ce",
        "g": "63e881f2502c39c4",
        "name": "flow.ModulesBlockingCharge",
        "rules": [
            {
                "t": "set",
                "p": "ModulesBlockingCharge",
                "pt": "flow",
                "to": "modulesBlockingCharge",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1000,
        "y": 1460,
        "wires": [
            []
        ]
    },
    {
        "id": "c6359613b6dc6e3d",
        "type": "function",
        "z": "1ceb83823bf626ce",
        "g": "63e881f2502c39c4",
        "name": "buffer, only pass if all are the same",
        "func": "let key = 'bufsmallest'\nlet maxBufLength = 2\n\nfunction allInArrayTheSame(arr){\n    \n    if(arr.length == 0)\n        return true\n    \n    let lastval = 0\n    \n    for(let i=0; i < arr.length; i++){\n        if(i == 0)\n            lastval = arr[i]\n            \n        if(lastval != arr[i])\n            return false\n        \n    }\n    return true\n}\n\n\nlet val = msg.payload\n\nlet buffer = flow.get(key) || [];\n\nbuffer.push(val)\n\nif(buffer.length > maxBufLength)\n    buffer.shift()\n\nflow.set(key, buffer)\n\nif(allInArrayTheSame(buffer)){\n    return msg\n    node.warn('vals the same')\n}\nelse\n    node.warn('vals not the same ignoring')\n\n\n\n\n\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1360,
        "y": 900,
        "wires": [
            [
                "e9e06447ab8915e1"
            ]
        ]
    },
    {
        "id": "3bd638416fccd21c",
        "type": "function",
        "z": "1ceb83823bf626ce",
        "g": "63e881f2502c39c4",
        "name": "buffer, only pass if all are the same",
        "func": "let key = 'buflargest'\nlet maxBufLength = 2\n\nfunction allInArrayTheSame(arr){\n    \n    if(arr.length == 0)\n        return true\n    \n    let lastval = 0\n    \n    for(let i=0; i < arr.length; i++){\n        if(i == 0)\n            lastval = arr[i]\n            \n        if(lastval != arr[i])\n            return false\n        \n    }\n    return true\n}\n\n\nlet val = msg.payload\n\nlet buffer = flow.get(key) || [];\n\nbuffer.push(val)\n\nif(buffer.length > maxBufLength)\n    buffer.shift()\n\nflow.set(key, buffer)\n\nif(allInArrayTheSame(buffer)){\n    return msg\n    node.warn('vals the same')\n}\nelse\n    node.warn('vals not the same ignoring')\n\n\n\n\n\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1360,
        "y": 1180,
        "wires": [
            [
                "4d7a0663cecacc8b"
            ]
        ]
    },
    {
        "id": "90c6bc2d250d5265",
        "type": "function",
        "z": "1ceb83823bf626ce",
        "g": "63e881f2502c39c4",
        "name": "check not null",
        "func": "let arr = msg.payload\n\nlet empty = false\n\nfor(let i in arr){\n    \n    if(isNaN(arr[i]))\n        empty = true\n}\n\nif(!empty)\n    return msg;\nelse\n    node.error('value was null')",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1960,
        "y": 1380,
        "wires": [
            [
                "664e91dbc5411359",
                "33e227fa66e40998"
            ]
        ]
    },
    {
        "id": "664e91dbc5411359",
        "type": "mqtt out",
        "z": "1ceb83823bf626ce",
        "g": "63e881f2502c39c4",
        "name": "",
        "topic": "virtualbattery",
        "qos": "1",
        "retain": "false",
        "respTopic": "",
        "contentType": "",
        "userProps": "",
        "correl": "",
        "expiry": "",
        "broker": "bbaaf0647a3e9b96",
        "x": 2170,
        "y": 1320,
        "wires": []
    },
    {
        "id": "33e227fa66e40998",
        "type": "debug",
        "z": "1ceb83823bf626ce",
        "g": "63e881f2502c39c4",
        "name": "debug 22",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": true,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "payload",
        "statusType": "auto",
        "x": 2160,
        "y": 1400,
        "wires": []
    },
    {
        "id": "6992644613867616",
        "type": "delay",
        "z": "1ceb83823bf626ce",
        "g": "63e881f2502c39c4",
        "name": "",
        "pauseType": "rate",
        "timeout": "5",
        "timeoutUnits": "seconds",
        "rate": "1",
        "nbRateUnits": "1",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": true,
        "allowrate": false,
        "outputs": 1,
        "x": 2050,
        "y": 1200,
        "wires": [
            [
                "177dc55d28340f8f"
            ]
        ]
    },
    {
        "id": "177dc55d28340f8f",
        "type": "function",
        "z": "1ceb83823bf626ce",
        "g": "63e881f2502c39c4",
        "name": "flow to dictionary",
        "func": "\n\nlet k1 = 'Soc'\nlet k2 = 'Current'\nlet k3 = 'Voltage'\nlet k4 = 'Power'\nlet k5 = 'MinCellTemperature'\nlet k6 = 'MaxCellTemperature'\nlet k7 = 'MaxChargeCurrent'\nlet k8 = 'MaxDischargeCurrent'\nlet k9 = 'MaxChargeVoltage'\nlet k10 = 'MaxCellVoltage'\nlet k11 = 'MinCellVoltage'\nlet k12 = 'ModulesBlockingCharge'\n\nlet arr = [k1,k2,k3,k4,k5,k6,k7,k8,k9,k10,k11,k12]\n\n\nlet payload = {}\nfor(let i in arr){\n    let v = flow.get(arr[i]) ?? 0;\n    \n    payload[arr[i]] = v\n}\n\nmsg.payload = payload\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1750,
        "y": 1380,
        "wires": [
            [
                "90c6bc2d250d5265"
            ]
        ]
    },
    {
        "id": "6199e5585be19a82",
        "type": "PID",
        "z": "1ceb83823bf626ce",
        "g": "63e881f2502c39c4",
        "name": "",
        "setpoint": "3.50",
        "pb": "0.6",
        "ti": "11",
        "td": "5",
        "integral_default": "0.1",
        "smooth_factor": "0",
        "max_interval": "5",
        "enable": 1,
        "disabled_op": "53.8",
        "x": 1430,
        "y": 1460,
        "wires": [
            [
                "2a32f3945d9f03f8"
            ]
        ]
    },
    {
        "id": "2a32f3945d9f03f8",
        "type": "range",
        "z": "1ceb83823bf626ce",
        "g": "63e881f2502c39c4",
        "minin": "0",
        "maxin": "1",
        "minout": "53.8",
        "maxout": "55.2",
        "action": "scale",
        "round": false,
        "property": "payload",
        "name": "",
        "x": 1590,
        "y": 1460,
        "wires": [
            [
                "49cbbc71d59b86db",
                "aa86d8e17401402d"
            ]
        ]
    },
    {
        "id": "49cbbc71d59b86db",
        "type": "change",
        "z": "1ceb83823bf626ce",
        "g": "63e881f2502c39c4",
        "name": "flow.MaxChargeVoltage",
        "rules": [
            {
                "t": "set",
                "p": "MaxChargeVoltage",
                "pt": "flow",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1830,
        "y": 1460,
        "wires": [
            []
        ]
    },
    {
        "id": "aa86d8e17401402d",
        "type": "debug",
        "z": "1ceb83823bf626ce",
        "g": "63e881f2502c39c4",
        "name": "debug 25",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": true,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "payload",
        "statusType": "auto",
        "x": 1780,
        "y": 1500,
        "wires": []
    },
    {
        "id": "f3d4d006239162ec",
        "type": "modbus-client",
        "name": "cerbogx",
        "clienttype": "tcp",
        "bufferCommands": true,
        "stateLogEnabled": false,
        "queueLogEnabled": false,
        "failureLogEnabled": true,
        "tcpHost": "127.0.0.1",
        "tcpPort": "502",
        "tcpType": "DEFAULT",
        "serialPort": "/dev/ttyUSB",
        "serialType": "RTU-BUFFERD",
        "serialBaudrate": "9600",
        "serialDatabits": "8",
        "serialStopbits": "1",
        "serialParity": "none",
        "serialConnectionDelay": "100",
        "serialAsciiResponseStartDelimiter": "0x3A",
        "unit_id": "1",
        "commandDelay": "1",
        "clientTimeout": "1000",
        "reconnectOnTimeout": true,
        "reconnectTimeout": "2000",
        "parallelUnitIdsAllowed": true,
        "showWarnings": true,
        "showLogs": true
    },
    {
        "id": "bbaaf0647a3e9b96",
        "type": "mqtt-broker",
        "name": "localhost",
        "broker": "localhost",
        "port": "1883",
        "clientid": "",
        "autoConnect": true,
        "usetls": false,
        "protocolVersion": "4",
        "keepalive": "60",
        "cleansession": true,
        "birthTopic": "",
        "birthQos": "0",
        "birthPayload": "",
        "birthMsg": {},
        "closeTopic": "",
        "closeQos": "0",
        "closePayload": "",
        "closeMsg": {},
        "willTopic": "",
        "willQos": "0",
        "willPayload": "",
        "willMsg": {},
        "userProps": "",
        "sessionExpiry": ""
    }
]